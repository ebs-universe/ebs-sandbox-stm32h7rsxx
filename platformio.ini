; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = ststm32
platform_packages =
    toolchain-gccarmnoneeabi@>1.120000.0
    tool-ebs ; @ file:///home/chintal/orgs/ebs/tools/pio-tools-integration
    tool-openocd@https://github.com/ebs-universe/pio-tool-openocd-stm32/archive/refs/heads/main.zip
build_flags = 
    -I include
    -I src
    -I src/cubemx/CMSIS/Device/ST/STM32H7RSxx/Include
    -I src/cubemx/CMSIS/Include
    -I src/cubemx/STM32H7RSxx_HAL_Driver/Inc
    -I lib/tinyusb/src
    -I lib/hal/src
	-fdata-sections -ffunction-sections
    -fstack-usage -mthumb 
    -mfpu=fpv5-d16
    -std=gnu++11 -Wall -O1
build_unflags = 
    -Os
board_build.ldscript = src/cubemx/STM32H7S3L8HX_FLASH.ld
lib_ldf_mode = deep+
lib_compat_mode = strict
lib_deps = 
    ebs-hal-uc @ ^9.9.9
    ebs-time
    ebs-modbus
    https://github.com/ebs-universe/piolib-task-blink.git
    https://github.com/ebs-universe/tinyusb.git
[env:dev]
board = nucleo_h7s3l8
upload_protocol = stlink
debug_tool = stlink
debug_port = localhost:3333
debug_build_flags = -g -O1
debug_extra_cmds = 
    set output-radix 16
build_flags = 
    ${env.build_flags}
    -Wl,-Map,${BUILD_DIR}/firmware.${PIOPLATFORM}.map -g -O1
    -I ${platformio.libdeps_dir}/${this.__env__}/ebs-time/src
    ;-save-temps=obj -fverbose-asm
extra_scripts = 
    ${platformio.packages_dir}/tool-ebs/generate_disassembly.py
    ${platformio.packages_dir}/tool-ebs/fpvgcc_integration.py
lib_deps = 
    ${env.lib_deps}
    https://github.com/ebs-universe/piolib-test-serial.git
test_framework = custom
test_build_src = yes
test_speed = 1000000
test_port = /dev/ttyACM0
; debug_test = hil/test_uart
